#!/usr/bin/env bash
set -e
set -o pipefail

fail() {
  echo -e "\e[31mFail:\e[m $*"
  exit 1
}

install_rust_analyzer() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$install_type" != "version" ]; then
    fail "asdf-rust-analyzer supports release installs only"
  fi

  local platform

  case "$OSTYPE" in
    darwin*) platform="apple-darwin" ;;
    linux*) platform="unknown-linux-gnu" ;;
    *) fail "Unsupported platform" ;;
  esac

  local architecture

  case "$(uname -m)" in
    x86_64 | x86-64 | x64 | amd64) architecture="x86_64" ;;
    aarch64 | arm64) architecture="aarch64" ;;
    *) fail "Unsupported architecture" ;;
  esac

  local download_url="https://github.com/rust-analyzer/rust-analyzer/releases/download/${version}/rust-analyzer-${architecture}-${platform}.gz"
  local tmp_download_dir
  tmp_download_dir=$(mktemp -d -t rust_analyzer_tmp_XXXXXX)
  local source_path="${tmp_download_dir}/rust-analyzer.gz"

  (
    echo "âˆ— Downloading..."
    curl --silent --location --create-dirs --output "$source_path" "$download_url" || fail "Could not download rust $version"
    mkdir -p "$install_path/bin"
    gunzip -c "$source_path" > "$install_path/bin/rust-analyzer" || fail "Could not uncompress. Make sure gzip is installed."
    chmod +x "$install_path/bin/rust-analyzer"

    rm -rf "$tmp_download_dir"

    echo "Installation was successful!"
  ) || (
    rm -rf "$install_path"
    fail "An error occurred"
  )
}

install_rust_analyzer "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
