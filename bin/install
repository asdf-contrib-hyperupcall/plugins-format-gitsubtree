#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_binnacle() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local platform="$(get_platform)"
  local arch="$(get_arch)"
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version $platform $arch)"
  local archive_install_path="$TMPDIR/binnacle"

  mkdir -p "${bin_install_path}"
  mkdir -p "${archive_install_path}"
  local archive_path="$archive_install_path/binnacle.tar.gz"
  local bin_path="${bin_install_path}/binnacle"
  echo "Downloading binnacle from ${download_url}"
  curl -sSL "$download_url" -o "$archive_path"
  echo "Extracting binnacle from ${archive_path}"
  tar -xvzf "$archive_path" -C "$archive_install_path"
  echo "Moving binnacle to ${bin_path}"
  mv "$archive_install_path/binnacle" "$bin_path"
  chmod +x $bin_path
}

get_platform() {
  echo "$(uname -s | tr '[:upper:]' '[:lower:]')"
}

get_arch() {
  local arch="$(uname -m)"

  case "$arch" in
    x86_64)
      echo "amd64"
      ;;
    arm64)
      echo "arm64"
      ;;
    *)
      >&2 echo "Unsupported architecture $arch"
      return 1
      ;;
  esac
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local arch="$3"

  echo "https://github.com/Traackr/binnacle/releases/download/${version}/binnacle-${platform}_${arch}.tar.gz"
}

install_binnacle $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH