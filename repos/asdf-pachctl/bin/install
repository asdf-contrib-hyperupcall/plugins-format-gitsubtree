#!/usr/bin/env bash

set -e
set -o pipefail

install() {
  local version=$2
  local install_path=$3
  local platform="$(uname | tr '[:upper:]' '[:lower:]')_amd64"

  local bin_install_path="$install_path/bin"
  local binary_path="$bin_install_path/pachctl"
  local download_url=$(get_download_url $version $platform)

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  if [ "$platform" == "linux_amd64" ]; then
    echo "Downloading pachctl from ${download_url} to ${binary_path}.tgz"
    curl -L "${download_url}" -o "${binary_path}.tgz"
    pushd "$(dirname ${binary_path})" > /dev/null
    tar -xzvf "${binary_path}.tgz"
  fi
  if [ "$platform" == "darwin_amd64" ]; then
    echo "Downloading pachctl from ${download_url} to ${binary_path}.zip"
    curl -L "${download_url}" -o "${binary_path}.zip"
    pushd "$(dirname ${binary_path})" > /dev/null
    unzip "${binary_path}.zip"
  fi

  mv "pachctl_${version}_${platform}/pachctl" ${binary_path}
  rm -rf "pachctl_${version}_${platform}"
  rm -rf "${binary_path}.tgz"
  chmod +x "${binary_path}"
  popd > /dev/null
}


get_filename() {
  local version="$1"
  local platform="$2"
  if [ "$platform" == "linux_amd64" ]; then
    echo "pachctl_${version}_${platform}".tar.gz
  fi
  if [ "$platform" == "darwin_amd64" ]; then
    echo "pachctl_${version}_${platform}".zip
  fi
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local filename="$(get_filename $version $platform)"
  echo "https://github.com/pachyderm/pachyderm/releases/download/v${version}/${filename}"
}

install $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
