#!/usr/bin/env bash

set -x
set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[[ -n "$ASDF_INSTALL_VERSION" ]] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[[ -n "$ASDF_INSTALL_PATH" ]] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_fd() {
  # local install_type=$1         # not currently used
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url; download_url="$(get_download_url "$version")"

  mkdir -p "${bin_install_path}"

  local bin_path="${bin_install_path}/fd"
  echo "Downloading fd from ${download_url}"
  curl -sSL "$download_url" -o "${install_path}/fd.tar.gz"
  tar xzf "${install_path}/fd.tar.gz" -C "${install_path}"
  mv "${install_path}/fd-v${version}-$(get_arch)-$(get_platform)"/* "${install_path}"
  mv "${install_path}/fd" "${bin_path}"
  chmod +x "$bin_path"
  rm -rf "${install_path}/fd.tar.gz" "${install_path}"/fd-*
}

get_arch() {
  local arch; arch=$(uname -m | tr '[:upper:]' '[:lower:]')
  case ${arch} in
  arm64)
    # If this is Apple silicon, then use the x86_64 architecture
    if [[ "$(uname | tr '[:upper:]' '[:lower:]')" == 'darwin' ]]; then
      arch='x86_64'
    else
      arch='arm'
    fi
    ;;
  armv7l)
    arch='arm'
    ;;
  esac

  echo "${arch}"
}

get_platform() {
  plat=$(uname | tr '[:upper:]' '[:lower:]')
  case ${plat} in
  darwin)
    plat='apple-darwin'
    ;;
  linux)
    if [[ "$(get_arch)" == 'arm' ]]; then
      plat='unknown-linux-gnueabihf'
    else
      plat='unknown-linux-gnu'
    fi
    ;;
  windows)
    plat='pc-windows=msvc'
    ;;
  esac

  echo "${plat}"
}

get_download_url() {
  local version="$1"
  local arch; arch="$(get_arch)"
  local platform; platform="$(get_platform)"

  echo "https://github.com/sharkdp/fd/releases/download/v${version}/fd-v${version}-${arch}-${platform}.tar.gz"
}

install_fd "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
